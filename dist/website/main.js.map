{"version":3,"sources":["./src/app/@modules/menu/menu.module.ts","./src/environments/environment.ts","./src/app/@components/home/home.component.ts","./src/app/@components/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/@components/menu/menu.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\n// import {MenuModule} from 'primeng/menu';\n //required when using MegaMenu\nimport { MenuComponent } from '@components/menu/menu.component';\n// import {PanelMenuModule} from 'primeng/panelmenu';\nimport {MenubarModule} from 'primeng/menubar';\n\nconst routes: Routes = [\n  { \n    path: '',  \n    component:MenuComponent\n  },\n]\n\n\n@NgModule({\n  declarations: [MenuComponent],\n  imports: [\n    CommonModule,\n    // MenuModule,\n    RouterModule.forChild(routes),\n    // PanelMenuModule\n    MenubarModule\n  ],\n  exports:[\n    MenuComponent,\n    MenubarModule\n    // MenuModule,\n    // PanelMenuModule\n  ]\n})\nexport class MenuModules { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row main\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <h1 style=\"font-size: 30px; margin-bottom: 10px;\" >RMJ Technologies Pte Ltd</h1>\n            <div class=\"address\">\n                <p >18 Sin Ming Lane #08-10 <br/>\n                Mid View City<br/>\n                Singapore 573960</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'website';\n\n  public  items: MenuItem[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.items = [{\n      label: 'File',\n      items: [\n          {label: 'New', icon: 'pi pi-plus'},\n          {label: 'Open', icon: 'pi pi-download'}\n      ]\n  },\n  {\n      label: 'Edit',\n      items: [\n          {label: 'Undo', icon: 'pi pi-refresh'},\n          {label: 'Redo', icon: 'pi pi-repeat'}\n      ]\n  }];\n}\n}\n","<div class=\"sh-app\">\n    <!-- <div class=\"sh-app-header\" >\n        <header>\n            <div class=\"app-logo\">\n                <h1 class=\"title\">RMJ Technologies</h1>\n            </div>\n\n            <div class=\"app-profile-info\">\n                <div>\n                </div>\n                <div class=\"user-icon-wrapper\">\n                </div>\n            </div>\n        </header>\n    </div> -->\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MenuModules } from '@modules/menu/menu.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { DashboardComponent } from './@components/dashboard/dashboard.component';\n// import { HomeComponent } from './@components/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n  \n    // DashboardComponent,\n    // HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MenuModules,BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  public  items: MenuItem[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.items = [{\n      label: 'File',\n      items: [\n          {label: 'New', icon: 'pi pi-plus'},\n          {label: 'Open', icon: 'pi pi-download'}\n      ]\n  },\n  {\n      label: 'Edit',\n      items: [\n          {label: 'Undo', icon: 'pi pi-refresh'},\n          {label: 'Redo', icon: 'pi pi-repeat'}\n      ]\n  }];\n  }\n\n}\n","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from '@components/dashboard/dashboard.component';\nimport { HomeComponent } from '@components/home/home.component';\nimport { DashboardModule } from '@modules/dashboard/dashboard.module';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:HomeComponent\n    // loadChildren: () => import('@modules/menu/menu.module').then(m => m.MenuModules)\n  },\n  // {\n  //   path:'dashboard',\n  //   // component:DashboardComponent\n  //   loadChildren: () => import('@modules/dashboard/dashboard.module').then(m => m.DashboardModule)\n  // }\n];\n\n@NgModule({\n  declarations:[HomeComponent],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule,HomeComponent]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}